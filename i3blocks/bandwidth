#!/usr/bin/env bash
# Combined Bandwidth Monitor for i3blocks
# Based on original script by Stefan Breunig, Thiago Perrotta, etc.

# Get custom IN and OUT labels if provided by command line arguments
while [[ $# -gt 1 ]]; do
    key="$1"
    case "$key" in
        -i|--inlabel)
            INLABEL="$2"
            shift;;
        -o|--outlabel)
            OUTLABEL="$2"
            shift;;
    esac
    shift
done

[[ -z "$INLABEL" ]] && INLABEL="IN "
[[ -z "$OUTLABEL" ]] && OUTLABEL="OUT "

# Detect all active interfaces (Ethernet or Wi-Fi)
INTERFACES=$(ip -o link show up | awk -F': ' '{print $2}' | grep -E '^(en|wl)')

# Exit if no active interfaces found
[[ -z "$INTERFACES" ]] && exit

# Path to store old results
path="/tmp/$(basename $0)-combined"

# Sum rx/tx from all active interfaces
rx=0
tx=0
for IF in $INTERFACES; do
  if [[ -r "/sys/class/net/$IF/statistics/rx_bytes" ]]; then
    r=$(<"/sys/class/net/$IF/statistics/rx_bytes")
    t=$(<"/sys/class/net/$IF/statistics/tx_bytes")
    rx=$((rx + r))
    tx=$((tx + t))
  fi
done

# Get time
time="$(date +%s)"

# Write current data if file does not exist
if ! [[ -f "${path}" ]]; then
  echo "${time} ${rx} ${tx}" > "${path}"
  chmod 0666 "${path}"
fi

# Read previous state and update data storage
read old < "${path}"
echo "${time} ${rx} ${tx}" > "${path}"

# Parse old data and calc time passed
old=(${old//;/ })
time_diff=$(( time - ${old[0]} ))

# Sanity check: has a positive amount of time passed
[[ "$time_diff" -gt 0 ]] || exit

# Calc bytes transferred, and their rate in byte/s
rx_diff=$(( rx - ${old[1]} ))
tx_diff=$(( tx - ${old[2]} ))
rx_rate=$(( rx_diff / time_diff ))
tx_rate=$(( tx_diff / time_diff ))

# Convert to KiB/s or MiB/s
rx_kib=$(( rx_rate >> 10 ))
tx_kib=$(( tx_rate >> 10 ))

# Incoming
echo -n "$INLABEL"
if hash bc 2>/dev/null && [[ "$rx_rate" -gt 1048576 ]]; then
  printf '%sM' "$(echo "scale=1; $rx_kib / 1024" | bc)"
else
  echo -n "${rx_kib}K"
fi

echo -n " "

# Outgoing
echo -n "$OUTLABEL"
if hash bc 2>/dev/null && [[ "$tx_rate" -gt 1048576 ]]; then
  printf '%sM\n' "$(echo "scale=1; $tx_kib / 1024" | bc)"
else
  echo "${tx_kib}K"
fi

